üöÄ Laravel ‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø-‡¶∞‡ßã‡¶≤ ‡¶Ö‡¶•‡ßá‡¶®‡ßç‡¶ü‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ (‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ó‡¶æ‡¶á‡¶°)

‡¶è‡¶á ‡¶ó‡¶æ‡¶á‡¶°‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® Laravel 12 ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßá, ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® (Admin) ‡¶è‡¶¨‡¶Ç ‡¶≠‡ßá‡¶®‡ßç‡¶°‡¶∞ (Vendor) ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶§‡ßà‡¶∞‡¶ø ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶õ‡ßã‡¶ü ‡¶ß‡¶æ‡¶™ ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶≤‡ßã‡¶ö‡¶®‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá‡•§

‡¶ß‡¶æ‡¶™ ‡ßß: ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú‡ßá‡¶∂‡¶® ‡¶ì ‡¶Ö‡¶•‡ßá‡¶®‡ßç‡¶ü‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ (Project Setup)

‡ßß.‡ßß. Laravel ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø

‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶∞‡ßç‡¶Æ‡¶ø‡¶®‡¶æ‡¶≤/‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶™‡ßç‡¶∞‡¶Æ‡ßç‡¶™‡¶ü-‡¶è ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® Laravel ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã:

composer create-project laravel/laravel auth-one
cd auth-one


‡ßß.‡ß®. Laravel Breeze ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶≤

Laravel Breeze ‡¶π‡¶≤‡ßã ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶Ö‡¶•‡ßá‡¶®‡ßç‡¶ü‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶æ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶ø‡¶Ç (Login, Registration ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø) ‡¶§‡ßà‡¶∞‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶∏‡¶π‡¶ú ‡¶â‡¶™‡¶æ‡¶Ø‡¶º‡•§

composer require laravel/breeze --dev
php artisan breeze:install


‡¶®‡ßã‡¶ü: ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶≤‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá Frontend Stack (‡¶Ø‡ßá‡¶Æ‡¶®: Blade, React, Vue) ‡¶è‡¶¨‡¶Ç Test Framework (‡¶Ø‡ßá‡¶Æ‡¶®: Pest) ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡¶≤‡¶¨‡ßá‡•§ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá Blade ‡¶è‡¶¨‡¶Ç Pest ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§

‡ßß.‡ß©. Frontend ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∏‡ßá‡¶ü ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶≤ ‡¶ì ‡¶¨‡¶ø‡¶≤‡ßç‡¶°

Laravel ‡¶è‡¶ñ‡¶® Vite ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‡•§ Frontend CSS/JS ‡¶´‡¶æ‡¶á‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá ‡¶ï‡¶Æ‡ßç‡¶™‡¶æ‡¶á‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Node.js ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶§‡¶æ ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶¨‡¶ø‡¶≤‡ßç‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

npm install
npm run dev
# ‡¶Ö‡¶•‡¶¨‡¶æ, ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ ‡¶¨‡¶ø‡¶≤‡ßç‡¶°‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø npm run build


‡ßß.‡ß™. ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ó ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™

‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ .env ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ, ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶®‡ßá‡¶Æ ‡¶ì ‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡¶ì‡•§

‡¶ß‡¶æ‡¶™ ‡ß®: ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ì ‡¶∏‡¶ø‡¶°‡¶ø‡¶Ç (Roles Preparation)

‡ß®.‡ßß. ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶ì ‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶Ü‡¶™‡¶°‡ßá‡¶ü

‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶∞‡ßã‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ users ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá ‡¶è‡¶ï‡¶ü‡¶ø role ‡¶ï‡¶≤‡¶æ‡¶Æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

‡¶Ø‡¶¶‡¶ø role ‡¶ï‡¶≤‡¶æ‡¶Æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã:

php artisan make:migration add_role_and_status_to_users_table --table=users


database/migrations/*_add_role_and_status_to_users_table.php ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡¶ì‡¶™‡ßá‡¶® ‡¶ï‡¶∞‡ßá up() ‡¶Æ‡ßá‡¶•‡¶°‡¶ü‡¶ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßã:

// ...
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

Schema::table('users', function (Blueprint $table) {
    // 'role' ‡¶ï‡¶≤‡¶æ‡¶Æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã, ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ 'customer' (‡¶¨‡¶æ ‡¶´‡¶æ‡¶Å‡¶ï‡¶æ)
    $table->string('role')->default('customer')->after('email'); 
    // ‡¶Ø‡¶¶‡¶ø status ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡¶Ø‡¶º, ‡¶∏‡ßá‡¶ü‡¶ø‡¶ì ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßã
    $table->string('status')->default('active')->after('role'); 
});
// ...


‡ß®.‡ß®. ‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶ì ‡¶∏‡¶ø‡¶°‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø

‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡ßá ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶≤‡¶æ‡¶Æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã:

php artisan migrate


‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶è‡¶¨‡¶Ç ‡¶≠‡ßá‡¶®‡ßç‡¶°‡¶∞ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶è‡¶ï‡¶ü‡¶ø Seeder ‡¶´‡¶æ‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ì ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßã:

php artisan make:seeder RoleUserSeeder


database/seeders/RoleUserSeeder.php ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßã:
‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø Test User-‡¶è‡¶∞ ‡¶¨‡¶¶‡¶≤‡ßá Admin ‡¶è‡¶¨‡¶Ç Vendor ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡¶ì‡•§

// database/seeders/RoleUserSeeder.php
// ...
use App\Models\User;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Hash;

class RoleUserSeeder extends Seeder
{
    public function run(): void
    {
        // Admin ‡¶á‡¶â‡¶ú‡¶æ‡¶∞
        User::updateOrCreate(
            ['email' => 'admin@example.com'],
            [
                'name' => 'Admin User',
                'password' => Hash::make('password'), // ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
                'role' => 'admin',
                'status' => 'active',
            ]
        );

        // Vendor ‡¶á‡¶â‡¶ú‡¶æ‡¶∞
        User::updateOrCreate(
            ['email' => 'vendor@example.com'],
            [
                'name' => 'Vendor User',
                'password' => Hash::make('password'), 
                'role' => 'vendor',
                'status' => 'active',
            ]
        );
        
        // Customer ‡¶á‡¶â‡¶ú‡¶æ‡¶∞
        User::updateOrCreate(
            ['email' => 'customer@example.com'],
            [
                'name' => 'Customer User',
                'password' => Hash::make('password'), 
                'role' => 'customer',
                'status' => 'active',
            ]
        );
    }
}


‡¶∏‡¶ø‡¶°‡¶æ‡¶∞ ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡ßã:

php artisan db:seed --class=RoleUserSeeder


(‡¶Ø‡¶¶‡¶ø ‡¶§‡ßÅ‡¶Æ‡¶ø db:seed ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º Duplicate entry Error ‡¶™‡¶æ‡¶ì, ‡¶§‡¶¨‡ßá ‡¶π‡¶Ø‡¶º ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶´‡ßç‡¶≤‡¶æ‡¶∂ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶á‡¶ó‡ßç‡¶∞‡ßá‡¶ü ‡¶ì ‡¶∏‡¶ø‡¶° ‡¶ï‡¶∞‡ßã, ‡¶Ö‡¶•‡¶¨‡¶æ User::updateOrCreate ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßã, ‡¶Ø‡ßá‡¶Æ‡¶®‡¶ü‡¶ø ‡¶â‡¶™‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§)

‡¶ß‡¶æ‡¶™ ‡ß©: ‡¶Æ‡¶ø‡¶°‡¶≤‡¶ì‡¶Ø‡¶º‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶á‡¶Æ‡¶™‡ßç‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∂‡¶® (The Gatekeeper)

‡ß©.‡ßß. RoleMiddleware ‡¶§‡ßà‡¶∞‡¶ø

‡¶è‡¶á ‡¶Æ‡¶ø‡¶°‡¶≤‡¶ì‡¶Ø‡¶º‡ßç‡¶Ø‡¶æ‡¶∞‡¶ü‡¶ø ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá ‡¶Ø‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∞‡¶æ‡¶â‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ‡•§

php artisan make:middleware RoleMiddleware


app/Http/Middleware/RoleMiddleware.php ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßã:

// app/Http/Middleware/RoleMiddleware.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class RoleMiddleware
{
    /**
     * ‡¶∞‡¶æ‡¶â‡¶ü‡ßá ‡¶ö‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßã‡¶≤ ‡¶Æ‡¶ø‡¶≤‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡ßá‡•§
     * * @param string $role ‡¶∞‡¶æ‡¶â‡¶ü‡ßá ‡¶°‡¶ø‡¶´‡¶æ‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶∞‡ßã‡¶≤ (‡¶Ø‡ßá‡¶Æ‡¶®: 'admin', 'vendor')
     */
    public function handle(Request $request, Closure $next, string $role): Response
    {
        // ‡ßß. ‡¶Ø‡¶¶‡¶ø ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
        if (!Auth::check()) {
            return redirect('/login');
        }

        $user = Auth::user();
        
        // ‡ß®. ‡¶Ø‡¶¶‡¶ø ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßã‡¶≤, ‡¶∞‡¶æ‡¶â‡¶ü‡ßá ‡¶ö‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶®‡¶æ ‡¶Æ‡ßá‡¶≤‡ßá
        if ($user->role !== $role) {
            // ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶ø 403 Forbidden ‡¶™‡ßá‡¶ú ‡¶¶‡ßá‡¶ñ‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã 
            // ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶§‡¶æ‡¶ï‡ßá ‡¶§‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡¶∏‡ßç‡¶¨ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§
            return redirect('/dashboard')->with('error', '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶á ‡¶™‡ßá‡¶ú‡¶ü‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø ‡¶®‡ßá‡¶á‡•§'); 
        }

        // ‡ß©. ‡¶∞‡ßã‡¶≤ ‡¶Æ‡¶ø‡¶≤‡ßá ‡¶ó‡ßá‡¶≤‡ßá, ‡¶∞‡¶ø‡¶ï‡ßã‡¶Ø‡¶º‡ßá‡¶∏‡ßç‡¶ü ‡¶™‡¶æ‡¶∏ ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì
        return $next($request);
    }
}


‡ß©.‡ß®. ‡¶Æ‡¶ø‡¶°‡¶≤‡¶ì‡¶Ø‡¶º‡ßç‡¶Ø‡¶æ‡¶∞ Alias ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞

Laravel-‡¶ï‡ßá ‡¶¨‡ßã‡¶ù‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá ‡¶Ø‡ßá ‡¶∞‡¶æ‡¶â‡¶ü‡ßá ‡¶Ø‡¶ñ‡¶® ‡¶Ü‡¶Æ‡¶∞‡¶æ role:admin ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶õ‡¶ø, ‡¶§‡¶ñ‡¶® ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶ï‡ßã‡¶® ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

bootstrap/app.php ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡¶ì‡¶™‡ßá‡¶® ‡¶ï‡¶∞‡ßá withMiddleware ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá alias ‡¶¨‡ßç‡¶≤‡¶ï ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßã:

// bootstrap/app.php
// ...
    ->withMiddleware(function (Middleware $middleware): void {
        // ‚úÖ ‡¶è‡¶á‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ RoleMiddleware ‡¶ü‡¶ø Alias ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
        $middleware->alias([
            'role' => \App\Http\Middleware\RoleMiddleware::class, // 'role' Alias ‡¶ü‡¶ø ‡¶è‡¶ñ‡¶® Routes ‡¶è ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá
        ]);
        
        // ... ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø middleware 
    })
// ...


‡¶ß‡¶æ‡¶™ ‡ß™: ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ì ‡¶≤‡¶ú‡¶ø‡¶ï (The Brains)

‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶§‡¶ø‡¶®‡¶ü‡¶ø ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨: Admin, Vendor-‡¶è‡¶∞ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶è‡¶¨‡¶Ç ‡¶≤‡¶ó‡¶á‡¶®-‡¶è‡¶∞ ‡¶™‡¶∞‡ßá ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞‡•§

‡ß™.‡ßß. ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø

Admin ‡¶è‡¶¨‡¶Ç Vendor-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞‡ßá ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã (Laravel ‡¶®‡¶ø‡¶ú‡ßá‡¶á ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶®‡ßá‡¶¨‡ßá)‡•§

php artisan make:controller Admin/AdminDashboardController
php artisan make:controller Vendor/VendorDashboardController
php artisan make:controller RoleRedirectController


‡ß™.‡ß®. ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶ï‡ßã‡¶° ‡¶Ü‡¶™‡¶°‡ßá‡¶ü

app/Http/Controllers/Admin/AdminDashboardController.php:

<?php
namespace App\Http\Controllers\Admin; // ‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï Namespace

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

class AdminDashboardController extends Controller
{
    public function index()
    {
        // Admin-‡¶è‡¶∞ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° view ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
        return view('admin.dashboard'); 
    }
}


app/Http/Controllers/Vendor/VendorDashboardController.php:

<?php
namespace App\Http\Controllers\Vendor; // ‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï Namespace

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

class VendorDashboardController extends Controller
{
    public function index()
    {
        // Vendor-‡¶è‡¶∞ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° view ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
        return view('vendor.dashboard'); 
    }
}


‡ß™.‡ß©. RoleRedirectController ‡¶ï‡ßã‡¶° ‡¶Ü‡¶™‡¶°‡ßá‡¶ü

app/Http/Controllers/RoleRedirectController.php:

<?php
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class RoleRedirectController extends Controller
{
    public function index()
    {
        $role = Auth::user()->role;

        switch ($role) {
            case 'admin':
                return redirect()->route('admin.dashboard'); // Admin ‡¶è‡¶∞ ‡¶∞‡ßÅ‡¶ü
            case 'vendor':
                return redirect()->route('vendor.dashboard'); // Vendor ‡¶è‡¶∞ ‡¶∞‡ßÅ‡¶ü
            case 'customer':
            case 'rider':
            default:
                // Customer/Rider ‡¶¨‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶∞‡ßÅ‡¶ü
                return redirect()->route('user.dashboard'); 
        }
    }
}


‡¶ß‡¶æ‡¶™ ‡ß´: ‡¶∞‡¶æ‡¶â‡¶ü‡¶ø‡¶Ç ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® (The Paths)

‡ß´.‡ßß. ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶∞‡¶æ‡¶â‡¶ü ‡¶´‡¶æ‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø

‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ routes ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞‡ßá ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡¶æ‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã:

routes/admin.php

routes/vendor.php

routes/admin.php:

<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Admin\AdminDashboardController; // ‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï Controller Import

Route::middleware(['auth', 'role:admin'])->prefix('admin')->group(function () {
    // Admin ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶∞‡ßÅ‡¶ü
    Route::get('/dashboard', [AdminDashboardController::class, 'index'])->name('admin.dashboard');
    // ... Admin-‡¶è‡¶∞ ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶∞‡ßÅ‡¶ü
});


routes/vendor.php:

<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Vendor\VendorDashboardController; // ‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï Controller Import

Route::middleware(['auth', 'role:vendor'])->prefix('vendor')->group(function () {
    // Vendor ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶∞‡ßÅ‡¶ü
    Route::get('/dashboard', [VendorDashboardController::class, 'index'])->name('vendor.dashboard');
    // ... Vendor-‡¶è‡¶∞ ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶∞‡ßÅ‡¶ü
});


‡ß´.‡ß®. routes/web.php ‡¶Ü‡¶™‡¶°‡ßá‡¶ü

‡¶è‡¶á ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶∞‡ßã‡¶≤‡ßá‡¶∞ ‡¶∞‡¶æ‡¶â‡¶ü ‡¶´‡¶æ‡¶á‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

routes/web.php ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ï‡ßã‡¶° ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßã:

// routes/web.php
<?php

use App\Http\Controllers\ProfileController;
use App\Http\Controllers\RoleRedirectController; // ‚úÖ ‡¶è‡¶ü‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá
use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| Public Routes
|--------------------------------------------------------------------------
*/

Route::get('/', function () {
    return view('welcome');
});

/*
|--------------------------------------------------------------------------
| Multi-Role Redirect
|--------------------------------------------------------------------------
| ‡¶è‡¶á ‡¶∞‡ßÅ‡¶ü‡¶ü‡¶ø ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶§‡¶æ‡¶∞ role ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá‡•§
*/
// (‡ßß) /dashboard route ‡¶ü‡¶ø ‡¶è‡¶ñ‡¶® RoleRedirectController ‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶¨‡ßá‡•§
Route::get('/dashboard', [RoleRedirectController::class, 'index'])
    ->middleware(['auth', 'verified'])
    ->name('dashboard'); // ‚úÖ ‡¶è‡¶á name ‡¶ü‡¶ø login ‡¶è‡¶∞ ‡¶™‡¶∞ ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü redirect ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡¶¨‡ßá

/*
|--------------------------------------------------------------------------
| General User Dashboard (Customer/Rider/Default)
|--------------------------------------------------------------------------
| RoleRedirectController ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶á ‡¶∞‡ßÅ‡¶ü‡ßá redirect ‡¶π‡¶¨‡ßá ‡¶Ø‡¶ñ‡¶® role 'admin' ‡¶¨‡¶æ 'vendor' ‡¶®‡¶æ ‡¶π‡¶¨‡ßá‡•§
*/
// (‡ß®) ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® route, ‡¶Ø‡¶æ ‡¶Ö‡¶∞‡¶ø‡¶ú‡¶ø‡¶®‡¶æ‡¶≤ dashboard view ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§
Route::get('/general/dashboard', function () {
    return view('dashboard'); // resources/views/dashboard.blade.php ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø ‡¶≤‡ßã‡¶° ‡¶π‡¶¨‡ßá
})->middleware(['auth', 'verified'])->name('user.dashboard');

/*
|--------------------------------------------------------------------------
| Authenticated User Routes (Profile)
|--------------------------------------------------------------------------
*/
Route::middleware('auth')->group(function () {
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
});

/*
|--------------------------------------------------------------------------
| Role Specific Routes Require
|--------------------------------------------------------------------------
*/
require __DIR__ . '/auth.php';
require __DIR__ . '/admin.php'; // ‚úÖ Admin routes ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã
require __DIR__ . '/vendor.php'; // ‚úÖ Vendor routes ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã



‡¶ß‡¶æ‡¶™ ‡ß¨: ‡¶≠‡¶ø‡¶â ‡¶´‡¶æ‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø (The Views)

Laravel-‡¶ï‡ßá ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶¶‡ßá‡¶ñ‡¶æ‡¶§‡ßá ‡¶π‡¶≤‡ßá ‡¶≠‡¶ø‡¶â ‡¶´‡¶æ‡¶á‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã ‡¶§‡ßà‡¶∞‡¶ø ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

resources/views/ ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶ì ‡¶´‡¶æ‡¶á‡¶≤ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã:

resources/views/admin/dashboard.blade.php (‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶ì ‡¶´‡¶æ‡¶á‡¶≤)

resources/views/vendor/dashboard.blade.php (‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶ì ‡¶´‡¶æ‡¶á‡¶≤)

resources/views/dashboard.blade.php (‡¶è‡¶ü‡¶ø Customer/Rider ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡¶¨‡ßá, Breeze ‡¶è‡¶ü‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶Ø‡¶º)

admin/dashboard.blade.php:

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Admin Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    {{ __("‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ï‡¶ú‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®!") }}
                </div>
            </div>
        </div>
    </div>
</x-app-layout>


vendor/dashboard.blade.php:

<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Vendor Dashboard') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 text-gray-900">
                    {{ __("‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ï‡¶ú‡¶® ‡¶≠‡ßá‡¶®‡ßç‡¶°‡¶∞ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®!") }}
                </div>
            </div>
        </div>
    </div>
</x-app-layout>


‡¶ß‡¶æ‡¶™ ‡ß≠: ‡¶´‡¶æ‡¶á‡¶®‡¶æ‡¶≤ ‡¶∞‡¶æ‡¶®

‡¶∏‡¶¨ ‡¶´‡¶æ‡¶á‡¶≤ ‡¶†‡¶ø‡¶ï‡¶†‡¶æ‡¶ï ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞, ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßã:

php artisan serve


‡¶è‡¶ñ‡¶® ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶á ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶°‡¶ø‡¶ü‡ßá‡¶á‡¶≤‡¶∏ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶Ø‡ßá ‡¶∞‡ßã‡¶≤ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ:

‡¶á‡¶â‡¶ú‡¶æ‡¶∞

‡¶á‡¶Æ‡ßá‡¶á‡¶≤

‡¶™‡¶æ‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°

‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡¶æ‡¶∂‡¶ø‡¶§ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤

Admin

admin@example.com

password

Admin Dashboard ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá

Vendor

vendor@example.com

password

Vendor Dashboard ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá

Customer

customer@example.com

password

Default Dashboard ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá

‡¶è‡¶á ‡¶ó‡¶æ‡¶á‡¶°‡¶ü‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶∞‡¶£ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø-‡¶∞‡ßã‡¶≤ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá!